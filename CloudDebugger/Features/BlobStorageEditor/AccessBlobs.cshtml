@model CloudDebugger.Features.BlobStorageEditor.BlobStorageModel
@{
    ViewData["Title"] = "Access Blob Storage";
}

<h4>Access Blob Storage</h4>
This tool allows you to access blobs in Blob storage.
<br />
<a href="/BlobStorage">Back</a>
<br>
<br>

<form asp-controller="BlobStorageEditor" asp-action="AccessBlobs" method="post">

    <table class="table">
        <tr>
            <td class="col-md-2">
                Storage account name
            </td>
            <td class="col-md-10">
                <input asp-for="StorageAccountName" style="min-width:30%">
            </td>
        </tr>
        <tr>
            <td class="col-md-2">Container name</td>
            <td class="col-md-6">
                <input asp-for="ContainerName" style="min-width:30%">
                <span asp-validation-for="ContainerName"></span>
            </td>
            <td class="col-md-4"></td>
        </tr>
        <tr>
            <td class="col-md-2">Access key or<br />SAS Token/URL</td>
            <td class="col-md-10">
                <input asp-for="SASToken" style="min-width:100%"><br />
                (If missing it will authenticate using DefaultAzureCredential)
            </td>
        </tr>

        <tr>
            <td class="col-md-2">Anonymous Access</td>
            <td class="col-md-10">
                <input asp-for="AnonymousAccess" type="checkbox" /> Access the blob storage anonymously.
            </td>
        </tr>

        <tr>
            <td class="col-md-2">Hierarchical Namespace</td>
            <td class="col-md-10">
                <input asp-for="HierarchicalNamespaceEnabled" type="checkbox" /> Use the GetBlobsByHierarchy instead of the GetBlobs method.
            </td>
        </tr>


    </table>

    <br />

    <table class="table table-bordered">
        <tr>
            <td class="col-md-6">
                <!-- First Column start -->
                <h5>Blobs in this container</h5>

                Path:   <input asp-for="Path" style="min-width:30%" id="blobPath">&nbsp;<button type="submit" name="button" value="listblobs">List blobs</button><br />

                @Model.AuthenticationMessage

                <table class="table table-bordered">

                    @if (Model.ContainerContent.Count > 0)
                    {
                        <thead>

                            <tr>
                                <th>Name</th>
                                <th>Size (bytes)</th>
                            </tr>


                        </thead>
                        <tbody>
                            <tr>
                                <td class="col-md-3">

                                    @foreach (var entry in Model.ContainerContent.OrderBy(f => f.name))
                                    {
                                        @if (entry.name.StartsWith('/'))
                                        {
                                            <b class="blob-folder">@entry.name</b>

                                            <br />
                                        }
                                        else
                                        {
                                            <span class="blob-filename">@entry.name</span>

                                            <br />

                                        }
                                    }
                                </td>
                                <td class="col-md-3">

                                    @foreach (var entry in Model.ContainerContent.OrderBy(f => f.name))
                                    {
                                        @entry.size

                                        <br />
                                    }
                                </td>
                            </tr>
                        </tbody>
                    }
                    else
                    {
                        <tr>
                            <td>
                                No files or folders in this container
                            </td>
                        </tr>
                    }
                </table>
                <!-- First column end -->

            </td>

            <td class="col-md-6">
                <!-- Second column start -->
                <table>
                    <tr>
                        <td>
                            <h5>Blob Content</h5>
                            <input asp-for="BlobName" id="blobName" />
                            <button type="submit" name="button" value="loadblob">Load</button>
                            &nbsp;&nbsp;<button type="submit" name="button" value="writeblob">Save</button><br />
                            <br />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            
                            <textarea asp-for="BlobContent" rows="10" cols="70"></textarea>
                        </td>
                    </tr>



                    @if (Model?.Blob != null)
                    {
                        <tr>
                            <td>
                                <h5>Properties</h5>
                                <table class="table table-bordered">
                                    <tr>
                                        <td class="col-md-2">blob Type</td>
                                        <td class="col-md-10">@Model.Blob.BlobType</td>
                                    </tr>
                                    <tr>
                                        <td class="col-md-2">ContentType</td>
                                        <td class="col-md-10">@Model.Blob.ContentType</td>
                                    </tr>
                                    <tr>
                                        <td class="col-md-2">CreatedOn</td>
                                        <td class="col-md-10">@Model.Blob.CreatedOn</td>
                                    </tr>
                                    <tr>
                                        <td class="col-md-2">LastAccessed</td>
                                        <td class="col-md-10">@Model.Blob.LastAccessed</td>
                                    </tr>
                                    <tr>
                                        <td class="col-md-2">LastModified</td>
                                        <td class="col-md-10">@Model.Blob.LastModified</td>
                                    </tr>
                                </table>
                            </td>
                        </tr>

                        @if (Model.Blob.MetaData.Count > 0)
                        {
                            <tr>
                                <td>
                                    <h5>
                                        Metadata tag
                                    </h5>
                                    <table class="table table-bordered">
                                        @foreach (var entry in Model.Blob.MetaData)
                                        {
                                            <tr>
                                                <td>@entry.Key</td>
                                                <td>@entry.Value</td>
                                            </tr>
                                        }
                                    </table>
                                </td>
                            </tr>
                        }
                    }
                </table>

                <!-- Second column end -->
            </td>
        </tr>
    </table>


    <br>

    @if (!String.IsNullOrWhiteSpace(Model?.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            <pre>@Model.ErrorMessage</pre>
        </div>
    }

    @if (!String.IsNullOrWhiteSpace(Model?.Message))
    {
        <b>@Model.Message</b>
    }

</form>

<br />
<br />

<h5>Resources</h5>
<ul>
    <li><a href="https://github.com/tndata/CloudDebugger/wiki/BlobStorage-AccessBlobs">Documentation</a></li>
</ul>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.blob-folder').click(function() {
                var folder = $(this).text().trim();
                $('#blobPath').val(folder);
            });

            $('.blob-filename').click(function() {
                var filename = $(this).text().trim();
                $('#blobName').val(filename);
            });

        });
    </script>
}